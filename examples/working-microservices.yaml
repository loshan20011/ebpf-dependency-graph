apiVersion: v1
kind: Namespace
metadata:
  name: enhanced-microservices
---
# Gateway Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: enhanced-microservices
  labels:
    app: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: nginx:alpine
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 80;
            location /health { 
              return 200 "gateway healthy\n"; 
              add_header Content-Type text/plain;
            }
            location /api/users { 
              return 200 "users from gateway\n"; 
              add_header Content-Type text/plain;
            }
            location /api/products { 
              return 200 "products from gateway\n"; 
              add_header Content-Type text/plain;
            }
            location /api/orders { 
              return 200 "orders from gateway\n"; 
              add_header Content-Type text/plain;
            }
            location / { 
              return 200 "Gateway Service - Entry Point\n"; 
              add_header Content-Type text/plain;
            }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: enhanced-microservices
spec:
  selector:
    app: gateway
  ports:
  - name: http
    port: 8000
    targetPort: 80
  type: NodePort
---
# User Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: enhanced-microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: nginx:alpine
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 80;
            location /health { 
              return 200 "user-service healthy\n"; 
              add_header Content-Type text/plain;
            }
            location /users { 
              return 200 "{\"users\": [\"john\", \"jane\", \"bob\"]}\n"; 
              add_header Content-Type application/json;
            }
            location /users/1 { 
              return 200 "{\"id\": 1, \"name\": \"john\", \"email\": \"john@example.com\"}\n"; 
              add_header Content-Type application/json;
            }
            location / { 
              return 200 "User Service\n"; 
              add_header Content-Type text/plain;
            }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: enhanced-microservices
spec:
  selector:
    app: user-service
  ports:
  - name: http
    port: 8001
    targetPort: 80
  type: NodePort
---
# Product Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: enhanced-microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: nginx:alpine
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 80;
            location /health { 
              return 200 "product-service healthy\n"; 
              add_header Content-Type text/plain;
            }
            location /products { 
              return 200 "{\"products\": [\"laptop\", \"phone\", \"tablet\"]}\n"; 
              add_header Content-Type application/json;
            }
            location /products/1 { 
              return 200 "{\"id\": 1, \"name\": \"laptop\", \"price\": 999}\n"; 
              add_header Content-Type application/json;
            }
            location / { 
              return 200 "Product Service\n"; 
              add_header Content-Type text/plain;
            }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: enhanced-microservices
spec:
  selector:
    app: product-service
  ports:
  - name: http
    port: 8002
    targetPort: 80
  type: NodePort
---
# Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: enhanced-microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: nginx:alpine
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 80;
            location /health { 
              return 200 "order-service healthy\n"; 
              add_header Content-Type text/plain;
            }
            location /orders { 
              return 200 "{\"orders\": [\"order-1\", \"order-2\"]}\n"; 
              add_header Content-Type application/json;
            }
            location /orders/1 { 
              return 200 "{\"id\": 1, \"status\": \"processing\", \"total\": 999}\n"; 
              add_header Content-Type application/json;
            }
            location / { 
              return 200 "Order Service\n"; 
              add_header Content-Type text/plain;
            }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: enhanced-microservices
spec:
  selector:
    app: order-service
  ports:
  - name: http
    port: 8003
    targetPort: 80
  type: NodePort
---
# Analytics Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: enhanced-microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
      - name: analytics-service
        image: nginx:alpine
        ports:
        - containerPort: 80
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo 'server {
            listen 80;
            location /health { 
              return 200 "analytics-service healthy\n"; 
              add_header Content-Type text/plain;
            }
            location /analytics { 
              return 200 "{\"events\": 1234, \"users\": 567}\n"; 
              add_header Content-Type application/json;
            }
            location / { 
              return 200 "Analytics Service\n"; 
              add_header Content-Type text/plain;
            }
          }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: enhanced-microservices
spec:
  selector:
    app: analytics-service
  ports:
  - name: http
    port: 8007
    targetPort: 80
  type: NodePort